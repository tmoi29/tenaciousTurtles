tenaciousTurtles - moiT, ionkinaK, LiuL, SenK

      ___
 ,,  // \\
(_,\/ \_/ \
  \ \_/_\_/>
  /_/  /_/
 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/

=======================================================
moiT -- 2017-12-14 13:14
-----------------------
Filled out team registration form

=======================================================
moiT, ionkinaK, liuL, senK -- 2017-12-15 13:00
-----------------------
Discussed project idea:

WELP
- APIs: Zomato (restaurants, address)
- Freegeoip or JS for finding customer location
- If we have time, integrate autrocomplete search from Nutritionix

=======================================================
moiT, ionkinaK, liuL, senK -- 2017-12-18 12:57

Worked on presentation and split up talking points

=======================================================
ionkinaK, liuL -- 2017-12-19 13:03

Presented design pitch
Feedback:
- Checkup on validity of FreeGeoIP
- Try Google Maps?

=======================================================
moiT, ionkinaK, liuL, senK -- 2017-12-20 13:06

Refined location finding
- Use JS to find zipcode if the user has GPS
- If not, use Freegeoip to get the IP address to get zipcode
- If the IP address is inaccurate, use user input

=======================================================
moiT, liuL -- 2017-12-21 13:12

Worked on the component map and integrated AJAX

=======================================================
ionkinaK, senK -- 2017-12-21 13:12

Worked on the site map and design doc

=======================================================
ionkinaK -- 2017-12-25 23:17

-Created app.py and layout.html
-Worked on navbar

=======================================================
ionkinaK -- 2017-12-26 2:32

-Finished layout.html
-Added logo to navbar
-Worked on login and create account pages

=======================================================
ionkinaK -- 2017-12-26 22:29

-Improved index.html by adding an image slider and 
changing the logo

=======================================================
moiT -- 2018-01-02 13:15

-Added freegeoip.py
-Can look up user's zip code

=======================================================
ionkinaK -- 2018-01-02 21:01

-Adjust text form on index.html (user can now type
over the image)
-Added text to each carousel slide
-Updated images

=======================================================
liuY -- 2018-01-03 13:17

-Work on database
  -accounts table completed
  -reviews table now accepts new reviews

=======================================================
moiT -- 2018-01-03 13:20

-Found tags to scrape from for zomato suggested restaurants

=======================================================
ionkinaK -- 2018-01-03 13:21

-Added js function to prevent carousel from moving
when the user is typing.

=======================================================
moiT -- 2018-01-03 15:58

-Added hashed passwords
-Fixed authenticate() and create_account() to flash errors and redirect pages
-Fixed login and create account forms
-Added logout function in app.py
-Added sessions
-Moved database and cleaned up repo

=======================================================
liuY -- 2018-01-04 15:50

-Finished functions regarding adding and getting reviews
-Added docstrings to functions whose usage is not apparent by signature

=======================================================
ionkinaK -- 2018-01-04 20:09

-Added responsive panels that will contain recommended
restaurants in the user's city.

=======================================================
khyberS -- 2018-01-05 02:47:52

Wrote most of the front-end JS to load restaurants
    from Zomato,
        incl. their reviews and ratings,
        using CORS-enabled AJAX calls for lower latency
        (no page refresh or double AJAX call,
        server to API and server to browser).
    It can use either GPS if hardware-permitting and user-allowed,
        zipcode if use enters it,
        or IP address as a default.
    It makes heavy use of Promises to handle asynchronous AJAX calls.
    It exports a Promise<{latitude, longitude}> getLocation() function,
        which returns a Promise of the current location,
        using GPS is able, allowed, and not explicitly disabled
            (using getLocation.dontUseGps()).
        or using the IP address,
            which uses FreeGeoIP,
            which willl always work if connected to the Internet.
    It exports a newRestaurants() constructor,
        which makes a "Restaurants" object,
        which contains the method:
            Promise<RestaurantL3> next(),
                which returns a Promise to the next RestaurantL3
                    (as specified by the Zomato API)
                sorted by distance
                and using the current location and a set radius
                until all the restaurants are exhausted,
                in which case the radius is increased
                and a new search API call is made to Zomato.
        and the method:
            Promise<bool> addNextTo(
                    HTMLElement parent,
                    BiConsumer<HTMLDivElement, RestaurantL3> restaurantToDiv),
                which appends a new HTMLDivElement to parent
                and fills that new div element using
                the next() restaurant
                and the supplied restaurantToDiv function.
    It's not completely tested, however,
        and the element IDs for the buttons, restaurantList, and zipcode field
        are not encoded correctly yet.

=======================================================
khyberS -- 2018-01-07 18:52:47

Fixed all the bugs in my JS code for getting restaurant data.
Now all we need to do is finish the function to get latitude and longitude
    from a zipcode (see zipCodeLocation(zipCode) on line 476),
    and finish restaurantToDiv(div, restaurant) on line 505,
    so that it makes the restaurant data look nicer.

=======================================================
khyberS -- 2018-01-07 20:08:39

Cleaned up index.html and refacted CSS into welp.css and JS in welp.js.

=======================================================
khyberS -- 2018-01-07 20:18:03

Factored out CSS for other HTML files and cleaned them up a little.

=======================================================
khyberS -- 2018-01-08 00:13:36

Moved zipcode box outside of carousel to make things much simpler.
Ideally, we would have the zipcode box on top of the carousel,
but not a part of it.

Fixed welp.js so that it adds the 20 first (closest) restaurants
in a similar style to the placeholder restaurants we had before,
showing the name, rating, and picture
(a lot of restaurants don't have any picture).

There's also a More Restaurants button that
adds the next restaurant to the list/row.

=======================================================
khyberS -- 2018-01-08 11:24:57

Cleaned up app.py and used my util stuff
from previous projects to make it more secure.

=======================================================
khyberS -- 2018-01-08 15:06:54

Fixed all the DB accesses in database.py susceptible to SQL injection.

Wrapped db = sqlite3.connect() calls in with statements,
so that db.close() is always called on exceptions and returns.

=======================================================
khyberS -- 2018-01-08 15:11:21

Implemented zipCodeLocation(zipCode) in welp.js
using the Google Maps Geocoding API.

=======================================================
khyberS -- 2018-01-08 15:23:41

Changed STRING columns to TEXT in setup_db.py.

Deleted freegeoip.py since it's implemented in used in welp.js.

Added requirements.txt with dependencies that can be installed
by running pip install -r requirements.txt.

=======================================================
